{"version":3,"sources":["webpack:///./src/app/modules/resources/components/resource-forms/resource-form.component.html","webpack:///./src/app/modules/resources/components/resource-forms/resource-form.component.scss","webpack:///./src/app/modules/resources/components/resource-forms/resource-form.component.ts","webpack:///./src/app/modules/resources/components/resource-view/resources-view.component.html","webpack:///./src/app/modules/resources/components/resource-view/resources-view.component.scss","webpack:///./src/app/modules/resources/components/resource-view/resources-view.component.ts","webpack:///./src/app/modules/resources/components/resources.component.html","webpack:///./src/app/modules/resources/components/resources.component.scss","webpack:///./src/app/modules/resources/components/resources.component.ts","webpack:///./src/app/modules/resources/resources.module.ts","webpack:///./src/app/modules/resources/resources.routing.ts","webpack:///./src/app/modules/resources/resources.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,gLAAgL,SAAS,ogBAAogB,sJAAsJ,kTAAkT,KAAK,6TAA6T,2JAA2J,yTAAyT,KAAK,uRAAuR,0JAA0J,ySAAyS,KAAK,sVAAsV,qJAAqJ,uIAAuI,SAAS,KAAK,YAAY,ySAAyS,KAAK,wVAAwV,sJAAsJ,uIAAuI,SAAS,KAAK,WAAW,0SAA0S,KAAK,2pCAA2pC,8JAA8J,ib;;;;;;;;;;;ACA/yL,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA0F;AACE;AACjB;AAEW;AAGwB;AAGhB;AACpC;AAO1D;IAiBE,+BACU,WAAwB,EACxB,IAAgB,EAChB,gBAAkC,EAClC,kBAAkD,EAClD,eAAgC;QAJhC,gBAAW,GAAX,WAAW,CAAa;QACxB,SAAI,GAAJ,IAAI,CAAY;QAChB,qBAAgB,GAAhB,gBAAgB,CAAkB;QAClC,uBAAkB,GAAlB,kBAAkB,CAAgC;QAClD,oBAAe,GAAf,eAAe,CAAiB;QAlBhC,wBAAmB,GAAsB,IAAI,0DAAY,EAAO,CAAC;QASpE,uBAAkB,GAAG,EAAE,CAAC;QAExB,uBAAkB,GAAQ,EAAE,CAAC;QASlC,IAAI,CAAC,QAAQ,GAAG,mEAAQ,GAAG,8EAAmB,CAAC,SAAS,CAAC;IAC3D,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC,KAAK,CAAC;QACjE,OAAO,IAAI,CAAC,WAAW,CAAC,8EAAmB,CAAC,mBAAmB,CAAC,CAAC;QACjE,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC,UAAU,CAAC;QAC3E,IAAI,CAAC,WAAW,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC,KAAK,CAAC;QACjE,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,kBAAkB,CAAC,aAAa,EAAE,CAAC,YAAY,CAAC;QAC/E,IAAI,CAAC,QAAQ,EAAE,CAAC;IAClB,CAAC;IAED,wCAAQ,GAAR;QACE,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CACpC;YACE,IAAI,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,CAAC;YAC1D,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,sBAAsB,CAAC,CAAC;YAC3D,KAAK,EAAE,CAAC,EAAE,EAAE,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC;YAClD,IAAI,EAAE,CAAC,EAAE,EAAE,CAAM,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtC,IAAI,EAAE,CAAC,EAAE,EAAE,CAAM,yDAAU,CAAC,QAAQ,CAAC,CAAC;YACtC,UAAU,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAC/B,WAAW,EAAE,IAAI,0DAAW,CAAC,EAAE,CAAC;YAChC,MAAM,EAAE,CAAC,GAAG,EAAE,CAAM,yDAAU,CAAC,QAAQ,CAAC,CAAC;SAC1C,CACF,CAAC;QAEF,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC;gBACvB,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;gBACxB,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;gBAC1B,KAAK,EAAE,IAAI,CAAC,QAAQ,CAAC,KAAK;gBAC1B,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,QAAQ,EAAE;gBACtC,IAAI,EAAE,IAAI,CAAC,QAAQ,CAAC,IAAI;gBACxB,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU;gBACpC,WAAW,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY;gBACvC,MAAM,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM;aAC7B,CAAC,CAAC;QACL,CAAC;IACH,CAAC;IACO,6CAAa,GAArB,UAAsB,IAAY,EAAE,IAA2B;QAA/D,iBASC;QATmC,0CAA2B;QAC7D,IAAM,SAAS,GAAsB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QAC1D,IAAM,SAAS,GAAc,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC;QACxD,SAAS,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;YAC5B,IAAI,YAAY,GAAG,KAAI,CAAC;YACxB,IAAM,OAAO,GAAG,IAAI,0DAAW,CAAC,YAAY,CAAC,eAAe,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC;YACnF,SAAS,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,EAAE,OAAO,CAAC,CAAC;QACjD,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,SAAS,CAAC;IACnB,CAAC;IAEO,+CAAe,GAAvB,UAAwB,EAAE,EAAE,IAAI;QAC9B,EAAE,CAAC,CAAC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;YAC1C,IAAI,UAAU,GAAG,CAAC,IAAI,KAAK,YAAY,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;YACjG,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC;QACvC,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;IACH,CAAC;IAEM,sCAAM,GAAb,UAAc,IAAI;QAAlB,iBA+BC;QA7BC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YACf,IAAI,cAAc,GAAG,IAAI,CAAC,KAAK,CAAC,MAAM,IAAI,MAAM,EAAC,CAAC,CAAC,CAAC,CAAC,EAAC,CAAC;YACvD,IAAI,OAAO,GAAG;gBACZ,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;gBACrB,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;gBACxB,KAAK,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK;gBACvB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;gBACrB,IAAI,EAAE,IAAI,CAAC,KAAK,CAAC,IAAI;gBACrB,UAAU,EAAE,IAAI,CAAC,KAAK,CAAC,UAAU;gBACjC,YAAY,EAAE,IAAI,CAAC,KAAK,CAAC,WAAW;gBACpC,MAAM,EAAE,cAAc;aACvB,CAAC;YACF,IAAI,QAAQ,GAAG,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;YAC9G,IAAI,CAAC,kBAAkB,GAAG,EAAE,CAAC;YAC7B,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC,SAAS,CACzC,aAAG;gBACD,KAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;YACrC,CAAC,EAAE,aAAG;gBACJ,IAAI,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC,CAAC,QAAQ,CAAC,CAAC;gBACvC,GAAG,CAAC,CAAC,IAAI,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC;oBAC3B,EAAE,CAAC,CAAC,IAAI,KAAK,SAAS,CAAC,CAAC,CAAC;wBACvB,KAAI,CAAC,kBAAkB,CAAC,IAAI,CAAC,GAAG,EAAE,QAAQ,EAAE,IAAI,EAAE,MAAM,EAAE,SAAS,CAAC,IAAI,CAAC,EAAE,CAAC;oBAC9E,CAAC;gBACH,CAAC;YACH,CAAC,CACF,CAAC;QACJ,CAAC;IAGH,CAAC;IAEO,gDAAgB,GAAxB,UAAyB,UAA0B,EAAE,IAAI;QACvD,IAAM,UAAU,GAAG,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACxC,IAAM,QAAQ,GAAsB,UAAU,CAAC,MAAM,CAAC,UAAC,IAAI,EAAE,KAAK;YAChE,EAAE,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,MAAM,CAAC,IAAI,CAAC;YACd,CAAC;QACH,CAAC,CAAC,CAAC;QAEH,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;IACvC,CAAC;IAIO,8CAAc,GAAtB,UAAuB,IAAuB;QAC5C,IAAM,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,UAAC,IAAI,EAAE,KAAK;YACnC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;QACjB,CAAC,CAAC,CAAC;QACH,MAAM,CAAC,OAAO,CAAC;IACjB,CAAC;IAEM,4CAAY,GAAnB;QACE,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC;IACpC,CAAC;IAEO,+CAAe,GAAvB,UAAwB,IAAI,EAAE,IAAI;QAChC,IAAI,MAAM,GAAG,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC;QACxC,IAAI,CAAC,eAAe,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC;IAC3C,CAAC;IA7IQ;QAAR,2DAAK,EAAE;;2DAAsB;IACrB;QAAR,2DAAK,EAAE;;wDAAmB;IACjB;QAAT,4DAAM,EAAE;kCAAsB,0DAAY;sEAAgC;IAJhE,qBAAqB;QALjC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAmBuB,0DAAW;YAClB,+DAAU;YACE,0HAAgB;YACd,wJAA8B;YACjC,kEAAe;OAtB/B,qBAAqB,CAiJjC;IAAD,4BAAC;CAAA;AAjJiC;;;;;;;;;;;;AClBlC,yMAAyM,iBAAiB,0EAA0E,kBAAkB,+WAA+W,oHAAoH,gCAAgC,sQAAsQ,wCAAwC,gIAAgI,gBAAgB,kJAAkJ,4HAA4H,oCAAoC,gNAAgN,8HAA8H,sCAAsC,+uBAA+uB,gCAAgC,gjBAAgjB,kEAAkE,KAAK,kCAAkC,+BAA+B,4mB;;;;;;;;;;;ACAp2G,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAqE;AACM;AACiB;AACvC;AACiC;AAC5B;AAIoD;AAIhB;AAO9F;IAeE,gCACU,IAAgB,EAChB,WAAwB,EACxB,eAAgC,EAChC,8BAA8D,EAC9D,gBAAkC;QAJlC,SAAI,GAAJ,IAAI,CAAY;QAChB,gBAAW,GAAX,WAAW,CAAa;QACxB,oBAAe,GAAf,eAAe,CAAiB;QAChC,mCAA8B,GAA9B,8BAA8B,CAAgC;QAC9D,qBAAgB,GAAhB,gBAAgB,CAAkB;QAZrC,aAAQ,GAAG,EAAE,CAAC;QAGd,eAAU,GAAQ,KAAK,CAAC;QAW7B,IAAI,CAAC,QAAQ,GAAG,mEAAQ,GAAG,8EAAmB,CAAC,SAAS,CAAC;IAC3D,CAAC;IAED,yCAAQ,GAAR;QACE,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,8BAA8B,CAAC,aAAa,EAAE,CAAC;QACtE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,WAAW,CAAC,KAAK,CACpC;YACE,IAAI,EAAE,IAAI,CAAC,WAAW,CAAC,KAAK,CAAC;gBAC3B,IAAI,0DAAW,CACb,IAAI,EAAE,yDAAU,CAAC,QAAQ,CAC1B;aACF,CAAC;SACH,CAAC,CAAC;IACP,CAAC;IAEO,+CAAc,GAAtB,UAAuB,IAAgB;QAAvC,iBAQC;QARsB,+BAAgB;QACrC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,GAAG,GAAG,QAAQ,GAAG,GAAG,GAAG,OAAO,GAAG,IAAI,CAAC;QAC9F,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC/B,aAAG;YACD,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;YAC5B,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;QACpC,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,kDAAiB,GAAxB,UAAyB,IAAc;QAAd,gCAAc;QACrC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAEM,mDAAkB,GAAzB;QACE,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAEM,6CAAY,GAAnB,UAAoB,IAAI;QACtB,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC;IAEM,gDAAe,GAAtB,UAAuB,KAAK;QAA5B,iBAUC;QATC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,KAAK,CAAC,MAAM,GAAG,GAAG,GAAG,eAAe,CAAC;QAC1E,IAAI,IAAI,GAAG,EAAC,IAAI,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,EAAC,CAAC;QAChC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC,SAAS,CACtC,aAAG;YACD,KAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,EAAE,aAAG;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,kDAAiB,GAAxB,UAAyB,KAAK,EAAE,OAAO;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC;IACpC,CAAC;IAEM,4CAAW,GAAlB,UAAmB,MAAM;QACvB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAEM,yCAAQ,GAAf,UAAgB,QAAQ;QAAxB,iBAaC;QAZC,EAAE,CAAC,CAAC,QAAQ,CAAC,KAAK,CAAC,CAAC,CAAC;YACnB,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,IAAI,CAAC,QAAQ,CAAC,EAAE,GAAG,GAAG,GAAG,QAAQ,CAAC;YACvE,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE,QAAQ,CAAC,KAAK,CAAC,CAAC,SAAS,CAChD,aAAG;gBACD,KAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;gBACvB,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACxB,CAAC,EAAE,aAAG;gBACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;gBACjB,KAAI,CAAC,QAAQ,CAAC,KAAK,EAAE,CAAC;YACxB,CAAC,CACF,CAAC;QACJ,CAAC;IACH,CAAC;IAEM,6CAAY,GAAnB;QACE,IAAI,CAAC,eAAe,CAAC,UAAU,EAAE,CAAC;IACpC,CAAC;IA/FQ;QAAR,2DAAK,EAAE;;4DAAsB;IAEJ;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAuB,kEAAc;iEAAC;IAC9B;QAAhC,+DAAS,CAAC,oBAAoB,CAAC;;sEAA2B;IALhD,sBAAsB;QALlC,+DAAS,CAAC;YACT,QAAQ,EAAE,oBAAoB;;;SAG/B,CAAC;yCAiBgB,+DAAU;YACH,0DAAW;YACP,kEAAe;YACA,wJAA8B;YAC5C,0HAAgB;OApBjC,sBAAsB,CAmGlC;IAAD,6BAAC;CAAA;AAnGkC;;;;;;;;;;;;ACpBnC,m0BAAm0B,eAAe,+CAA+C,iBAAiB,whBAAwhB,WAAW,+CAA+C,aAAa,whBAAwhB,WAAW,+CAA+C,cAAc,qmBAAqmB,iBAAiB,+CAA+C,mBAAmB,y8CAAy8C,oFAAoF,8LAA8L,kDAAkD,cAAc,2BAA2B,aAAa,2BAA2B,cAAc,sEAAsE,+bAA+b,4EAA4E,mUAAmU,kCAAkC,8hEAA8hE,qBAAqB,sZ;;;;;;;;;;;ACA9lP,mB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACQuB;AACoD;AACtB;AAC8B;AACF;AACC;AAC3B;AAIoD;AAO3G;IAmBE,4BACU,wBAAkD,EAClD,IAAgB,EAChB,eAAgC,EAChC,8BAA8D;QAH9D,6BAAwB,GAAxB,wBAAwB,CAA0B;QAClD,SAAI,GAAJ,IAAI,CAAY;QAChB,oBAAe,GAAf,eAAe,CAAiB;QAChC,mCAA8B,GAA9B,8BAA8B,CAAgC;QAhBjE,aAAQ,GAAG,EAAE,CAAC;QAGd,eAAU,GAAQ,KAAK,CAAC;QAKxB,iBAAY,GAAQ,EAAE,CAAC;QAEvB,oBAAe,GAAG,EAAE,OAAO,EAAE,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,IAAI,EAAE,EAAE,EAAE,UAAU,EAAE,EAAE,EAAE,CAAC;QAQzF,IAAI,CAAC,QAAQ,GAAG,mEAAQ,GAAG,8EAAmB,CAAC,SAAS,CAAC;IAC3D,CAAC;IAED,qCAAQ,GAAR;QAAA,iBASC;QARC,IAAI,CAAC,UAAU,GAAG,IAAI,CAAC,8BAA8B,CAAC,aAAa,EAAE,CAAC;QACtE,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,eAAe,CAAC,kBAAkB,EAAE,CAAC,SAAS,CACjD,aAAG;YACD,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CACF,CAAC;QACF,IAAI,CAAC,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC;IAC1G,CAAC;IAEO,2CAAc,GAAtB,UAAuB,IAAgB;QAAvC,iBAQC;QARsB,+BAAgB;QACrC,IAAI,QAAQ,GAAG,IAAI,CAAC,wBAAwB,CAAC,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,OAAO,GAAG,IAAI,CAAC,CAAC;QACnF,IAAI,CAAC,IAAI,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,SAAS,CAC/B,aAAG;YACD,KAAI,CAAC,QAAQ,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC;YAC5B,KAAI,CAAC,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC,CAAC;QACpC,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,8CAAiB,GAAxB,UAAyB,IAAc;QAAd,gCAAc;QACrC,IAAI,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;QAC1B,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAEM,6CAAgB,GAAvB,UAAwB,IAAc;QAAd,gCAAc;QACpC,IAAI,CAAC,2BAA2B,CAAC,IAAI,CAAC,CAAC;QACvC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAIM,6CAAgB,GAAvB;QACE,IAAI,CAAC,sBAAsB,CAAC,MAAM,EAAE,CAAC;QACrC,IAAI,CAAC,sBAAsB,CAAC,KAAK,EAAE,CAAC;QACpC,IAAI,CAAC,aAAa,CAAC,IAAI,EAAE,CAAC;IAC5B,CAAC;IAEO,2CAAc,GAAtB,UAAuB,UAAU;QAAjC,iBAcC;QAbC,IAAI,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,6FAAqB,CAAC,CAAC;QAC3F,IAAI,QAAQ,GAAG,gEAAkB,CAAC,qBAAqB,CAAC,EAAE,EAAE,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;QACxG,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,UAAU,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,KAAK,GAAG,CAAC,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAG,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,cAAc,CAAC;QAClG,IAAI,CAAC,QAAQ,CAAC,mBAAmB,CAAC,SAAS,CACzC,aAAG;YACD,KAAI,CAAC,cAAc,CAAC,KAAI,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;YACjD,KAAI,CAAC,gBAAgB,EAAE,CAAC;QAC1B,CAAC,CACF,CAAC;QACF,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEO,wDAA2B,GAAnC,UAAoC,UAAU;QAC5C,IAAI,OAAO,GAAG,IAAI,CAAC,wBAAwB,CAAC,uBAAuB,CAAC,8FAAsB,CAAC,CAAC;QAC5F,IAAI,QAAQ,GAAG,gEAAkB,CAAC,qBAAqB,CAAC,EAAE,EAAE,IAAI,CAAC,sBAAsB,CAAC,cAAc,CAAC,CAAC;QACxG,IAAI,IAAI,GAAG,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,QAAQ,GAAG,UAAU,CAAC;QACpC,IAAI,CAAC,sBAAsB,CAAC,MAAM,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAClD,MAAM,CAAC,IAAI,CAAC;IACd,CAAC;IAEM,yCAAY,GAAnB,UAAoB,IAAI;QACtB,IAAI,CAAC,kBAAkB,CAAC,yBAAyB,CAAC,IAAI,CAAC,CAAC;IAC1D,CAAC;IAEM,4CAAe,GAAtB,UAAuB,KAAK;QAA5B,iBASC;QARC,IAAI,QAAQ,GAAG,IAAI,CAAC,QAAQ,GAAG,GAAG,GAAG,KAAK,CAAC,EAAE,CAAC;QAC9C,IAAI,CAAC,IAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,SAAS,CAClC,aAAG;YACD,KAAI,CAAC,cAAc,EAAE,CAAC;QACxB,CAAC,EAAE,aAAG;YACJ,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;QACnB,CAAC,CACF,CAAC;IACJ,CAAC;IAEM,8CAAiB,GAAxB,UAAyB,KAAK,EAAE,OAAO;QACrC,MAAM,CAAC,IAAI,CAAC,IAAI,CAAC,KAAK,GAAG,OAAO,CAAC,CAAC;IACpC,CAAC;IAED;;;;;OAKG;IACI,gDAAmB,GAA1B,UAA2B,WAAW,EAAE,OAAO,EAAE,KAAK;QACpD,MAAM,CAAC,CAAC,CAAC,WAAW,GAAG,CAAC,CAAC,GAAG,OAAO,CAAC,GAAG,KAAK,GAAG,CAAC,CAAC;IACnD,CAAC;IAEM,wCAAW,GAAlB,UAAmB,MAAM;QACvB,IAAI,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IAC9B,CAAC;IAEM,iDAAoB,GAA3B;QACE,IAAI,CAAC,cAAc,CAAC,CAAC,CAAC,CAAC;IACzB,CAAC;IAEO,qDAAwB,GAAhC,UAAiC,WAAmB;QAClD,GAAG,CAAC,CAAC,IAAM,GAAG,IAAI,IAAI,CAAC,eAAe,CAAC,CAAC,CAAC;YACvC,qCAAqC;YACrC,EAAE,CAAC,CAAC,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;gBACrC,WAAW,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,CAAC,eAAe,CAAC,GAAG,CAAC,CAAC;YAC7D,CAAC;QACH,CAAC;QACD,MAAM,CAAC,WAAW,CAAC;IACrB,CAAC;IAGO,sCAAS,GAAjB,UAAkB,IAAY;QAC5B,IAAI,EAAE,GAAkB,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACnD,IAAI,KAAK,GAAW,EAAE,CAAC,MAAM,CAAC;QAC9B,IAAI,UAAU,GAAG,IAAI,GAAG,GAAG,CAAC;QAC5B,IAAI,CAAS,CAAC;QAEd,GAAG,CAAC,CAAC,IAAI,CAAC,GAAW,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;YAC1C,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,EAAE,EAAE,CAAC,CAAC;YAChC,EAAE,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAC/B,MAAM,CAAC,CAAC,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,EAAE,CAAC,CAAC,MAAM,CAAC,CAAC;YAClD,CAAC;QACH,CAAC;QACD,MAAM,CAAC,EAAE,CAAC;IACZ,CAAC;IAEO,yCAAY,GAApB,UAAqB,IAAI;QACvB,IAAI,CAAC,SAAS,CAAC,IAAI,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC;IAC/B,CAAC;IAEO,sCAAS,GAAjB,UAAkB,IAAY,EAAE,KAAa,EAAE,UAAkB,EAAE,IAAiB;QAAjB,gCAAiB;QAClF,IAAI,CAAC,GAAS,IAAI,IAAI,EAAE,CAAC;QACzB,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,EAAE,GAAG,UAAU,GAAG,EAAE,GAAG,EAAE,GAAG,EAAE,GAAG,IAAI,CAAC,CAAC;QAC1D,IAAI,OAAO,GAAW,UAAU,GAAG,CAAC,CAAC,WAAW,EAAE,CAAC;QACnD,QAAQ,CAAC,MAAM,GAAG,IAAI,GAAG,GAAG,GAAG,KAAK,GAAG,IAAI,GAAG,OAAO,GAAG,CAAC,IAAI,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,IAAI,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;IACpG,CAAC;IAEM,8CAAiB,GAAxB,UAAyB,GAAG;QAC1B,IAAI,CAAC,YAAY,GAAG,GAAG,CAAC;QACxB,IAAI,CAAC,SAAS,CAAC,aAAa,EAAE,GAAG,EAAE,GAAG,CAAC,CAAC;IAC1C,CAAC;IAvKyB;QAAzB,+DAAS,CAAC,aAAa,CAAC;kCAAuB,kEAAc;6DAAC;IAC9B;QAAhC,+DAAS,CAAC,oBAAoB,CAAC;;kEAA2B;IAE3D;QADC,+DAAS,CAAC,wBAAwB,EAAE,EAAE,IAAI,EAAE,8DAAgB,EAAE,CAAC;kCACxC,8DAAgB;sEAAC;IAL9B,kBAAkB;QAL9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;SAG1B,CAAC;yCAqBoC,sEAAwB;YAC5C,+DAAU;YACC,kEAAe;YACA,wJAA8B;OAvB7D,kBAAkB,CA4K9B;IAAD,yBAAC;CAAA;AA5K8B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACzBU;AACM;AACmB;AACqB;AAC3C;AAC+B;AACpB;AAG2C;AAC5B;AACsB;AACC;AACvC;AACH;AACC;AA2BpD;IAAA;IAA+B,CAAC;IAAnB,eAAe;QAxB3B,8DAAQ,CAAC;YACR,OAAO,EAAE;gBACP,4DAAY;gBACZ,0DAAW;gBACX,kEAAmB;gBACnB,qEAAgB;gBAChB,yDAAW,CAAC,OAAO,EAAE;gBACrB,mEAAgB;gBAChB,qJAAiC;gBACjC,gEAAkB,CAAC,OAAO,EAAE;gBAC5B,oEAAc;aACf;YACD,YAAY,EAAE;gBACZ,kFAAkB;gBAClB,wGAAqB;gBACrB,0GAAsB;aACvB;YACD,eAAe,EAAE,CAAC,wGAAqB,EAAE,0GAAsB,CAAC;YAChE,SAAS,EAAE;gBACT,+DAAU;gBACV,EAAE,OAAO,EAAE,sEAAiB,EAAE,QAAQ,EAAE,mFAAc,EAAE,KAAK,EAAE,IAAI,EAAE;gBACrE,mEAAe;aAChB;SACF,CAAC;OACW,eAAe,CAAI;IAAD,sBAAC;CAAA;AAAJ;;;;;;;;;;;;;;;;;ACxC2B;AACe;AAEtE,IAAM,MAAM,GAAW;IACnB;QACI,IAAI,EAAE,EAAE,EAAE,SAAS,EAAE,kFAAkB;KAC1C;CACJ,CAAC;AAEK,IAAM,gBAAgB,GAAwB,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACXxC;AAEJ;AACR;AACE;AAGjC;IAOE;QALQ,WAAM,GAAG,IAAI,oDAAO,EAAO,CAAC;QAC5B,YAAO,GAAG,IAAI,CAAC,MAAM,CAAC,YAAY,EAAE,CAAC;QAErC,cAAS,GAAG,IAAI,oDAAO,EAAO,CAAC;QAC/B,eAAU,GAAG,IAAI,CAAC,SAAS,CAAC,YAAY,EAAE,CAAC;IACnC,CAAC;IAEV,oCAAU,GAAjB;QACE,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC;IAC/B,CAAC;IAEM,4CAAkB,GAAzB;QACE,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;IACtB,CAAC;IAEM,qCAAW,GAAlB,UAAmB,IAAI;QACrB,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;IACtC,CAAC;IAEM,kCAAQ,GAAf;QACE,MAAM,CAAC,IAAI,CAAC,UAAU,CAAC;IACzB,CAAC;IAvBU,eAAe;QAD3B,gEAAU,EAAE;;OACA,eAAe,CAyB3B;IAAD,sBAAC;CAAA;AAzB2B","file":"modules-resources-resources-module.js","sourcesContent":["module.exports = \"<form class=\\\"card mb-0\\\" [formGroup]=\\\"dataForm\\\" novalidate (ngSubmit)=\\\"submit(dataForm)\\\">\\n  <div class=\\\"card-header\\\">\\n    <h3 class=\\\"card-title\\\">{{ title }}</h3>\\n    <div class=\\\"card-options\\\">\\n      <button class=\\\"btn btn-secondary btn-sm\\\" type=\\\"button\\\" (click)=\\\"formCanceled()\\\">\\n        <i class=\\\"fe fe-x\\\"></i>\\n      </button>\\n    </div>\\n  </div>\\n  <div class=\\\"card-body\\\">\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-8\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"form-label\\\">Name\\n            <span class=\\\"form-required\\\">*</span>\\n          </label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': dataForm.controls.name.errors && (dataForm.controls.name.dirty || dataForm.controls.name.touched) || apiValidatedErrors.name?.haserror }\\\"\\n            formControlName=\\\"name\\\" />\\n          <div *ngIf=\\\"!apiValidatedErrors.name?.haserror else nameError\\\" class=\\\"invalid-feedback\\\">Name Required !</div>\\n          <ng-template #nameError>\\n            <div *ngFor=\\\"let err of apiValidatedErrors.name.errors\\\" class=\\\"invalid-feedback\\\"> {{err}}</div>\\n          </ng-template>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-4\\\">\\n        <div class=\\\"form-group\\\">\\n          <label class=\\\"form-label\\\">Pit id\\n            <span class=\\\"form-required\\\">*</span>\\n          </label>\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': dataForm.controls.pitId.errors && (dataForm.controls.pitId.dirty || dataForm.controls.pitId.touched) || apiValidatedErrors.pit_id?.haserror }\\\"\\n            formControlName=\\\"pitId\\\" />\\n          <div *ngIf=\\\"!apiValidatedErrors.pitId?.haserror else pitIdError\\\" class=\\\"invalid-feedback\\\">Pit id Required !</div>\\n          <ng-template #pitIdError>\\n            <div *ngFor=\\\"let err of apiValidatedErrors.pitId.errors\\\" class=\\\"invalid-feedback\\\"> {{err}}</div>\\n          </ng-template>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-group\\\">\\n      <label class=\\\"form-label\\\">Email\\n        <span class=\\\"form-required\\\">*</span>\\n      </label>\\n      <input type=\\\"email\\\" class=\\\"form-control\\\" [ngClass]=\\\"{'is-invalid': dataForm.controls.email.errors && (dataForm.controls.email.dirty || dataForm.controls.email.touched) || apiValidatedErrors.email?.haserror }\\\"\\n        formControlName=\\\"email\\\" />\\n\\n      <div *ngIf=\\\"!apiValidatedErrors.email?.haserror else emailError\\\" class=\\\"invalid-feedback\\\">Invalid Email !</div>\\n      <ng-template #emailError>\\n        <div *ngFor=\\\"let err of apiValidatedErrors.email.errors\\\" class=\\\"invalid-feedback\\\"> {{err}}</div>\\n      </ng-template>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"form-label\\\">Role\\n            <span class=\\\"form-required\\\">*</span>\\n          </div>\\n          <select name=\\\"role\\\" class=\\\"form-control\\\" formControlName=\\\"role\\\" [ngClass]=\\\"{'is-invalid': dataForm.controls.role.errors && (dataForm.controls.role.dirty || dataForm.controls.role.touched) || apiValidatedErrors.role?.haserror}\\\">\\n            <option value=''>Select Role</option>\\n            <option *ngFor=\\\"let role of masterRoles | objIterator\\\" value=\\\"{{role.id}}\\\">{{role.label}}</option>\\n          </select>\\n          <div *ngIf=\\\"!apiValidatedErrors.role?.haserror else roleError\\\" class=\\\"invalid-feedback\\\">UserRole Required !</div>\\n          <ng-template #roleError>\\n            <div *ngFor=\\\"let err of apiValidatedErrors.role.errors\\\" class=\\\"invalid-feedback\\\"> {{err}}</div>\\n          </ng-template>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"form-label\\\">Master Team\\n            <span class=\\\"form-required\\\">*</span>\\n          </div>\\n          <select name=\\\"team\\\" class=\\\"form-control\\\" formControlName=\\\"team\\\" [ngClass]=\\\"{'is-invalid': dataForm.controls.team.errors && (dataForm.controls.team.dirty || dataForm.controls.team.touched) || apiValidatedErrors.team?.haserror }\\\">\\n            <option value=''>Select Team</option>\\n            <option *ngFor=\\\"let team of masterTeams | objIterator\\\" value=\\\"{{team.id}}\\\">{{team.name}}</option>\\n          </select>\\n          <div *ngIf=\\\"!apiValidatedErrors.team?.haserror else teamError\\\" class=\\\"invalid-feedback\\\">User team Required !</div>\\n          <ng-template #teamError>\\n            <div *ngFor=\\\"let err of apiValidatedErrors.team.errors\\\" class=\\\"invalid-feedback\\\"> {{err}}</div>\\n          </ng-template>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"form-label\\\">Activities</div>\\n          <ng-select [items]=\\\"masterActivities | objIterator\\\" formControlName=\\\"activities\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" [multiple]=\\\"true\\\"\\n            placeholder=\\\"Select Activities\\\"></ng-select>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"form-label\\\">Technologies</div>\\n          <div class=\\\"custom-controls-stacked\\\">\\n            <ng-select [items]=\\\"masterTechnologies | objIterator\\\" formControlName=\\\"technolgies\\\" bindLabel=\\\"name\\\" bindValue=\\\"id\\\" [multiple]=\\\"true\\\"\\n              placeholder=\\\"Select Technologies\\\">\\n            </ng-select>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"form-group\\\">\\n          <div class=\\\"form-label\\\">Status</div>\\n          <select name=\\\"status\\\" class=\\\"form-control\\\" formControlName=\\\"status\\\" [ngClass]=\\\"{'is-invalid': dataForm.controls.status.errors && (dataForm.controls.status.dirty || dataForm.controls.status.touched) || apiValidatedErrors.status?.haserror }\\\">\\n            <option value=\\\"true\\\">Active</option>\\n            <option value=\\\"false\\\">Inactive</option>\\n          </select>\\n        </div>\\n      </div>\\n    </div>\\n\\n  </div>\\n  <div class=\\\"card-footer text-right\\\">\\n    <span class=\\\"btn btn-danger\\\" (click)=\\\"formCanceled()\\\">Cancel</span>\\n    <button type=\\\"submit\\\" [disabled]=\\\"!dataForm.valid\\\" class=\\\"btn btn-primary ml-2\\\">Submit</button>\\n  </div>\\n</form>\\n\"","module.exports = \"\"","import { Component, OnInit, Input, ViewChild, EventEmitter, Output } from '@angular/core';\nimport { FormGroup, FormControl, FormBuilder, FormArray, Validators } from '@angular/forms';\nimport { HttpClient, HttpParams, HttpRequest } from '@angular/common/http';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { BASE_URL, ApplicationConstant } from '../../../../shared/constants/constant';\nimport {\n  CommonSharedDataStorageService\n} from '../../../../shared/shared-services-and-components-module/services/common-shared-data-storage.service';\nimport {\n  ValidatorService\n} from '../../../../shared/shared-services-and-components-module/services/validators.service';\nimport { ResourceService } from '../../resources.service';\n\n@Component({\n  selector: 'app-resources-form',\n  templateUrl: './resource-form.component.html',\n  styleUrls: ['./resource-form.component.scss']\n})\nexport class ResourceFormComponent implements OnInit {\n\n  @Input() public resource: any;\n  @Input() public title: any;\n  @Output() resourceDataChanged: EventEmitter<any> = new EventEmitter<any>();\n\n  public dataForm: FormGroup;\n  private endPoint: string;\n  public masterRoles;\n  public masterActivities;\n  public masterTechnologies;\n  public masterTeams;\n  public activitiesFormElement;\n  public validationMessages = {};\n\n  public apiValidatedErrors: any = {};\n\n  constructor(\n    private formBuilder: FormBuilder,\n    private http: HttpClient,\n    private validatorService: ValidatorService,\n    private dataStorageService: CommonSharedDataStorageService,\n    private resourceService: ResourceService\n  ) {\n    this.endPoint = BASE_URL + ApplicationConstant.RESOURCES;\n  }\n\n  ngOnInit() {\n    this.masterRoles = this.dataStorageService.getSharedData().roles;\n    delete this.masterRoles[ApplicationConstant.SUPER_ADMIN_ROLE_ID];\n    this.masterActivities = this.dataStorageService.getSharedData().activities;\n    this.masterTeams = this.dataStorageService.getSharedData().teams;\n    this.masterTechnologies = this.dataStorageService.getSharedData().technologies;\n    this.initForm();\n  }\n\n  initForm() {\n    this.dataForm = this.formBuilder.group(\n      {\n        name: ['', [this.validatorService.validateNotEmptyString]],\n        pitId: ['', [this.validatorService.validateNotEmptyString]],\n        email: ['', [this.validatorService.validateEmail]],\n        role: ['', [<any>Validators.required]],\n        team: ['', [<any>Validators.required]],\n        activities: new FormControl([]),\n        technolgies: new FormControl([]),\n        status: ['1', [<any>Validators.required]]\n      }\n    );\n\n    if (Object.keys(this.resource).length > 0) {\n      this.dataForm.patchValue({\n        name: this.resource.name,\n        pitId: this.resource.pitId,\n        email: this.resource.email,\n        role: this.resource.role[0].toString(),\n        team: this.resource.team,\n        activities: this.resource.activities,\n        technolgies: this.resource.technologies,\n        status: this.resource.status\n      });\n    }\n  }\n  private addNewControl(data: object, type: string = 'activities'): FormGroup {\n    const dataArray: Array<Array<any>> = Object.entries(data);\n    const formGroup: FormGroup = this.formBuilder.group({});\n    dataArray.forEach((item, index) => {\n      let localContext = this;\n      const control = new FormControl(localContext.checkInResource(item[1]['id'], type));\n      formGroup.addControl(item[1]['name'], control);\n    });\n    return formGroup;\n  }\n\n  private checkInResource(id, type) {\n    if (Object.keys(this.resource).length > 0) {\n      let checkArray = (type === 'activities') ? this.resource.activities : this.resource.technologies;\n      return checkArray.indexOf(id) !== -1;\n    } else {\n      return false;\n    }\n  }\n\n  public submit(form) {\n\n    if (form.valid) {\n      let resourceStatus = form.value.status == 'true'? 1 :0;\n      let postObj = {\n        name: form.value.name,\n        pit_id: form.value.pitId,\n        email: form.value.email,\n        role: form.value.role,\n        team: form.value.team,\n        activities: form.value.activities,\n        technologies: form.value.technolgies,\n        status: resourceStatus\n      };\n      let endpoint = Object.keys(this.resource).length > 0 ? this.endPoint + '/' + this.resource.id : this.endPoint;\n      this.apiValidatedErrors = {};\n      this.http.post(endpoint, postObj).subscribe(\n        res => {\n          this.resourceDataChanged.emit(res);\n        }, err => {\n          let apiErrors = err['error']['errors'];\n          for (let errs in apiErrors) {\n            if (errs !== undefined) {\n              this.apiValidatedErrors[errs] = { haserror: true, errors: apiErrors[errs] };\n            }\n          }\n        }\n      );\n    }\n\n\n  }\n\n  private getCheckBoxValue(formValues: Array<boolean>, data): Array<string> {\n    const filterData = Object.entries(data);\n    const selected: Array<Array<any>> = filterData.filter((item, index) => {\n      if (formValues[item[1]['name']]) {\n        return item;\n      }\n    });\n\n    return this.getIdFromArray(selected);\n  }\n\n\n\n  private getIdFromArray(data: Array<Array<any>>): Array<string> {\n    const idArray = data.map((item, index) => {\n      return item[0];\n    });\n    return idArray;\n  }\n\n  public formCanceled() {\n    this.resourceService.cancelForm();\n  }\n\n  private addOrEditedData(data, type) {\n    let tempbj = { data: data, type: type };\n    this.resourceService.addOrEdited(tempbj);\n  }\n\n}\n","module.exports = \"<div class=\\\"table-responsive\\\">\\n  <table class=\\\"table table-bordered table-sm\\\">\\n    <tbody>\\n      <tr>\\n        <th colspan=\\\"4\\\">\\n          <h3 class=\\\"mb-0\\\">\\n            {{ resource.name }}\\n            <ng-container *ngIf=\\\"!!resource.pitId\\\">\\n              ({{ resource.pitId }})\\n            </ng-container>\\n            <button class=\\\"btn btn-sm float-right\\\" type=\\\"button\\\" (click)=\\\"formCanceled()\\\">\\n              <i class=\\\"fe fe-x\\\"></i>\\n            </button>\\n          </h3>\\n        </th>\\n      </tr>\\n      <tr>\\n        <th width=\\\"20%\\\">Role</th>\\n        <td width=\\\"30%\\\">\\n          <span *ngFor=\\\"let item of resource.role;\\\" class=\\\"badge badge-info ml-1\\\">\\n            <ng-container *ngIf=\\\"!!masterData.roles[item]\\\">\\n              {{ masterData.roles[item].label }}\\n            </ng-container>\\n          </span>\\n        </td>\\n        <th width=\\\"20%\\\">Master Team</th>\\n        <td width=\\\"30%\\\">\\n          <ng-container *ngIf=\\\"!!masterData.teams[resource.team]\\\">\\n            <span class=\\\"badge badge-success ml-1\\\">{{ masterData.teams[resource.team].name }}</span>\\n          </ng-container>\\n        </td>\\n      </tr>\\n      <tr>\\n        <th>Email</th>\\n        <td colspan=\\\"3\\\">{{resource.email}}</td>\\n      </tr>\\n      <tr>\\n        <th>Activities</th>\\n        <td colspan=\\\"3\\\">\\n          <span *ngFor=\\\"let item of resource.activities;\\\" class=\\\"badge badge-warning ml-1\\\">\\n            <ng-container *ngIf=\\\"!!masterData.activities[item]\\\">\\n              {{ masterData.activities[item].name }}\\n            </ng-container>\\n          </span>\\n        </td>\\n      </tr>\\n      <tr>\\n        <th>Technologies</th>\\n        <td colspan=\\\"3\\\">\\n          <span *ngFor=\\\"let item of resource.technologies;\\\" class=\\\"badge badge-warning ml-1\\\">\\n            <ng-container *ngIf=\\\"!!masterData.technologies[item]\\\">\\n              {{ masterData.technologies[item].name }}\\n            </ng-container>\\n          </span>\\n        </td>\\n      </tr>\\n    </tbody>\\n  </table>\\n</div>\\n\\n<table class=\\\"table table-bordered table-sm\\\">\\n  <thead>\\n    <tr>\\n      <th colspan=\\\"4\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-6 col-sm-6\\\">\\n            <h3>Resource Leaves</h3>\\n          </div>\\n          <div class=\\\"col-md-6 col-sm-6\\\">\\n            <form [formGroup]=\\\"dataForm\\\" novalidate (ngSubmit)=\\\"addLeave(dataForm)\\\" *hasPermission=\\\"'create-resource-leaves'\\\">\\n              <div formArrayName=\\\"date\\\" class=\\\"form-group mb-0\\\">\\n                <div class=\\\"input-group\\\">\\n                  <input type=\\\"text\\\" placeholder=\\\"Pick a date\\\" class=\\\"form-control\\\" bsDatepicker [bsConfig]=\\\"{ dateInputFormat: 'YYYY-MM-DD' }\\\"\\n                    formControlName=\\\"0\\\" readonly>\\n                  <span class=\\\"input-group-append\\\">\\n                    <button type=\\\"submit\\\" [disabled]=\\\"!dataForm.valid\\\" class=\\\"btn btn-primary\\\">Add Leave</button>\\n                  </span>\\n                </div>\\n              </div>\\n            </form>\\n          </div>\\n        </div>\\n      </th>\\n    </tr>\\n    <tr>\\n      <th class=\\\"w-1\\\">No.</th>\\n      <th>Date</th>\\n      <th>Actions</th>\\n    </tr>\\n  </thead>\\n  <tbody>\\n    <tr *ngFor=\\\"let item of dataList | objIterator;let i= index\\\">\\n      <td>\\n        <span class=\\\"text-muted\\\">{{i+1}}</span>\\n      </td>\\n      <td>{{item.date | date : 'fullDate'}}</td>\\n      <td>\\n        <a class=\\\"icon\\\" href=\\\"javascript:void(0)\\\" (click)=\\\"deleteDialog(item)\\\" *hasPermission=\\\"'delete-resource-leaves'\\\">\\n          <i class=\\\"fe fe-trash-2\\\"></i>\\n        </a>\\n      </td>\\n    </tr>\\n  </tbody>\\n</table>\\n<app-pagination *ngIf=\\\"pagination\\\" [lastPage]=\\\"calculateLastPage(pagination.total,pagination.perPage)\\\" [currentPage]=\\\"pagination.currentPage\\\"\\n  [pageCount]=\\\"pagination.perPage\\\" (changePage)=\\\"pageChanged($event)\\\" class=\\\"mt-2\\\"></app-pagination>\\n<app-confirmationdialog #confirmationdialog (confirmed)=\\\"deleteConfirmed($event)\\\"></app-confirmationdialog>\"","module.exports = \"\"","import { Component, OnInit, ViewChild, Input, } from '@angular/core';\nimport { HttpClient, HttpParams, HttpRequest } from '@angular/common/http';\nimport { FormGroup, FormControl, FormBuilder, FormArray, Validators } from '@angular/forms';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { BASE_URL, ApplicationConstant } from '../../../../shared/constants/constant';\nimport { ResourceService } from '../../resources.service';\n\nimport {\n  CommonSharedDataStorageService\n} from '../../../../shared/shared-services-and-components-module/services/common-shared-data-storage.service';\n\nimport {\n  ValidatorService\n} from '../../../../shared/shared-services-and-components-module/services/validators.service';\n\n@Component({\n  selector: 'app-resources-view',\n  templateUrl: './resources-view.component.html',\n  styleUrls: ['./resources-view.component.scss']\n})\nexport class ResourcesViewComponent implements OnInit {\n\n  @Input() public resource: any;\n\n  @ViewChild('modalwindow') public taskViewModal: ModalDirective;\n  @ViewChild('confirmationdialog') public confirmationdialog;\n\n  public dataForm: FormGroup;\n  public dataList = [];\n  public title: string;\n  private endPoint: string;\n  public pagination: any = false;\n  private comp;\n  public masterData: any;\n\n  constructor(\n    private http: HttpClient,\n    private formBuilder: FormBuilder,\n    private resourceService: ResourceService,\n    private commonSharedDataStorageService: CommonSharedDataStorageService,\n    private validatorService: ValidatorService,\n  ) {\n    this.endPoint = BASE_URL + ApplicationConstant.RESOURCES;\n  }\n\n  ngOnInit() {\n    this.masterData = this.commonSharedDataStorageService.getSharedData();\n    this.getListingData();\n    this.dataForm = this.formBuilder.group(\n      {\n        date: this.formBuilder.array([\n          new FormControl(\n            null, Validators.required\n          )\n        ])\n      });\n  }\n\n  private getListingData(page: number = 1) {\n    let endpoint = this.endPoint + '/' + this.resource.id + '/' + 'leaves' + '?' + 'page=' + page;\n    this.http.get(endpoint).subscribe(\n      res => {\n        this.dataList = res['data'];\n        this.pagination = res['paginate'];\n      }\n    );\n  }\n\n  public openCUModalWindow(data: any = {}) {\n    this.taskViewModal.show();\n  }\n\n  public closeCUModalWindow() {\n    this.taskViewModal.hide();\n  }\n\n  public deleteDialog(item) {\n    this.confirmationdialog.presentConfirmationWindow(item);\n  }\n\n  public deleteConfirmed(event) {\n    let endpoint = this.endPoint + '/' + event.userId + '/' + 'leaves/delete';\n    let data = {date: [event.date]};\n    this.http.post(endpoint, data).subscribe(\n      res => {\n        this.getListingData();\n      }, err => {\n        console.log(err);\n      }\n    );\n  }\n\n  public calculateLastPage(total, perPage) {\n    return Math.ceil(total / perPage);\n  }\n\n  public pageChanged($event) {\n    this.getListingData($event);\n  }\n\n  public addLeave(dataForm) {\n    if (dataForm.valid) {\n      let endpoint = this.endPoint + '/' + this.resource.id + '/' + 'leaves';\n      this.http.post(endpoint, dataForm.value).subscribe(\n        res => {\n          this.getListingData(1);\n          this.dataForm.reset();\n        }, err => {\n          console.log(err);\n          this.dataForm.reset();\n        }\n      );\n    }\n  }\n\n  public formCanceled() {\n    this.resourceService.cancelForm();\n  }\n\n}\n","module.exports = \"<div class=\\\"row\\\">\\n  <div class=\\\"col-sm-12 col-md-12\\\">\\n    <div class=\\\"card\\\">\\n      <div class=\\\"card-header\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-2\\\">\\n            <h3 class=\\\"card-title align-middle\\\">Resources</h3>\\n          </div>\\n          <div class=\\\"col-md-10\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col\\\">\\n                <select\\n                  name=\\\"activity\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"filterControles.activity\\\"\\n                  (change)=\\\"onFilterValueChanges()\\\"\\n                >\\n                  <option value=\\\"\\\">Select activity</option>\\n                  <option\\n                    *ngFor=\\\"let activity of masterData.activities | objIterator\\\"\\n                    value=\\\"{{ activity.id }}\\\"\\n                  >\\n                    {{ activity.name }}\\n                  </option>\\n                </select>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <select\\n                  name=\\\"team\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"filterControles.team\\\"\\n                  (change)=\\\"onFilterValueChanges()\\\"\\n                >\\n                  <option value=\\\"\\\">Select Team</option>\\n                  <option\\n                    *ngFor=\\\"let team of masterData.teams | objIterator\\\"\\n                    value=\\\"{{ team.id }}\\\"\\n                  >\\n                    {{ team.name }}\\n                  </option>\\n                </select>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <select\\n                  name=\\\"role\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"filterControles.role\\\"\\n                  (change)=\\\"onFilterValueChanges()\\\"\\n                >\\n                  <option value=\\\"\\\">Select Role</option>\\n                  <option\\n                    *ngFor=\\\"let role of masterData.roles | objIterator\\\"\\n                    value=\\\"{{ role.id }}\\\"\\n                  >\\n                    {{ role.label }}\\n                  </option>\\n                </select>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <select\\n                  name=\\\"technology\\\"\\n                  class=\\\"form-control\\\"\\n                  [(ngModel)]=\\\"filterControles.technology\\\"\\n                  (change)=\\\"onFilterValueChanges()\\\"\\n                >\\n                  <option value=\\\"\\\">Select Technology</option>\\n                  <option\\n                    *ngFor=\\\"\\n                      let technology of masterData.technologies | objIterator\\n                    \\\"\\n                    value=\\\"{{ technology.id }}\\\"\\n                  >\\n                    {{ technology.name }}\\n                  </option>\\n                </select>\\n              </div>\\n              <div class=\\\"col\\\">\\n                <input\\n                  type=\\\"text\\\"\\n                  class=\\\"form-control\\\"\\n                  name=\\\"keyword\\\"\\n                  placeholder=\\\"keyword..\\\"\\n                  [(ngModel)]=\\\"filterControles.keyword\\\"\\n                  (input)=\\\"onFilterValueChanges()\\\"\\n                />\\n              </div>\\n              <div class=\\\"col-md-1\\\">\\n                <button\\n                  class=\\\"btn btn-outline-secondary\\\"\\n                  (click)=\\\"openCUModalWindow()\\\"\\n                  *hasPermission=\\\"'create-resource'\\\"\\n                >\\n                  <i class=\\\"fe fe-plus-circle\\\"></i>\\n                </button>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table card-table table-vcenter text-nowrap\\\">\\n          <thead>\\n            <tr>\\n              <th width=\\\"5%\\\">No.</th>\\n              <th width=\\\"5%\\\">PIT ID</th>\\n              <th width=\\\"30%\\\">Name</th>\\n              <th width=\\\"30%\\\">Email</th>\\n              <th width=\\\"30%\\\">Status</th>\\n              <th width=\\\"10%\\\">Team</th>\\n              <th width=\\\"10%\\\">Role</th>\\n              <th width=\\\"5%\\\">Actions</th>\\n            </tr>\\n          </thead>\\n          <tbody>\\n            <tr *ngFor=\\\"let item of dataList | objIterator; let i = index\\\">\\n              <td>\\n                <span class=\\\"text-muted\\\">{{\\n                  calculateLineNumber(\\n                    pagination.currentPage,\\n                    pagination.perPage,\\n                    i\\n                  )\\n                }}</span>\\n              </td>\\n              <td>{{ item.pitId }}</td>\\n              <td>{{ item.name }}</td>\\n              <td>{{ item.email }}</td>\\n              <td>\\n                <div *ngIf=\\\"!!item.status; else userInactive\\\">\\n                  <span class=\\\"badge badge-success ml-1\\\">Active</span>\\n                </div>\\n                <ng-template #userInactive>\\n                  <span class=\\\"badge badge-danger ml-1\\\">Inactive</span>\\n                </ng-template>\\n              </td>\\n              <td>\\n                <ng-container *ngIf=\\\"!!masterData.teams[item.team]\\\">\\n                  <span class=\\\"badge badge-success ml-1\\\">{{\\n                    masterData.teams[item.team].name\\n                  }}</span>\\n                </ng-container>\\n              </td>\\n              <td>\\n                <span\\n                  *ngFor=\\\"let roleID of item.role\\\"\\n                  class=\\\"badge badge-info ml-1\\\"\\n                >\\n                  <ng-container *ngIf=\\\"!!masterData.roles[roleID]\\\">\\n                    {{ masterData.roles[roleID].label }}\\n                  </ng-container>\\n                </span>\\n              </td>\\n              <td>\\n                <a\\n                  class=\\\"icon\\\"\\n                  href=\\\"javascript:void(0)\\\"\\n                  (click)=\\\"openResourceView(item)\\\"\\n                  *hasPermission=\\\"'list-resource-leaves'\\\"\\n                >\\n                  <i class=\\\"fe fe-user\\\"></i>\\n                </a>\\n                <a\\n                  class=\\\"icon ml-1\\\"\\n                  href=\\\"javascript:void(0)\\\"\\n                  (click)=\\\"openCUModalWindow(item)\\\"\\n                  *hasPermission=\\\"'edit-resource'\\\"\\n                >\\n                  <i class=\\\"fe fe-edit\\\"></i>\\n                </a>\\n                <a\\n                  class=\\\"icon ml-1\\\"\\n                  href=\\\"javascript:void(0)\\\"\\n                  (click)=\\\"deleteDialog(item)\\\"\\n                  *hasPermission=\\\"'delete-resource'\\\"\\n                >\\n                  <i class=\\\"fe fe-trash-2\\\"></i>\\n                </a>\\n              </td>\\n            </tr>\\n          </tbody>\\n        </table>\\n      </div>\\n    </div>\\n    <app-pagination\\n      *ngIf=\\\"pagination\\\"\\n      [lastPage]=\\\"calculateLastPage(pagination.total, pagination.perPage)\\\"\\n      [currentPage]=\\\"pagination.currentPage\\\"\\n      [pageCount]=\\\"pagination.perPage\\\"\\n      (changePage)=\\\"pageChanged($event)\\\"\\n    ></app-pagination>\\n\\n    <!-- <select [(ngModel)]=\\\"itemsPerPage\\\" (change)=\\\"changeItemPerPage($event.target.value)\\\">\\n      <option [value]=\\\"10\\\" [selected]=\\\"itemsPerPage ==10\\\">10 item per page</option>\\n      <option [value]=\\\"20\\\" [selected]=\\\"itemsPerPage ==20\\\">20 item per page</option>\\n      <option [value]=\\\"25\\\" [selected]=\\\"itemsPerPage ==25\\\">25 item per page</option>\\n      <option [value]=\\\"50\\\" [selected]=\\\"itemsPerPage ==50\\\">50 item per page</option>\\n      <option [value]=\\\"100\\\" [selected]=\\\"itemsPerPage ==100\\\">100 item per page</option>\\n    </select> -->\\n  </div>\\n</div>\\n\\n<div\\n  class=\\\"modal fade\\\"\\n  bsModal\\n  #modalwindow=\\\"bs-modal\\\"\\n  [config]=\\\"{ backdrop: 'static' }\\\"\\n  tabindex=\\\"-1\\\"\\n  role=\\\"dialog\\\"\\n  aria-labelledby=\\\"dialog-static-name\\\"\\n>\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-body\\\">\\n        <div #dynamicResourceContent></div>\\n      </div>\\n    </div>\\n  </div>\\n</div>\\n<app-confirmationdialog\\n  #confirmationdialog\\n  (confirmed)=\\\"deleteConfirmed($event)\\\"\\n></app-confirmationdialog>\\n\"","module.exports = \"\"","import {\n  Component,\n  OnInit,\n  ViewChild,\n  ViewContainerRef,\n  ComponentFactoryResolver,\n  ReflectiveInjector,\n  ComponentFactory,\n} from '@angular/core';\nimport { HttpClient, HttpParams, HttpRequest } from '@angular/common/http';\nimport { ModalDirective } from 'ngx-bootstrap/modal';\nimport { BASE_URL, ApplicationConstant } from '../../../shared/constants/constant';\nimport { ResourceFormComponent } from './resource-forms/resource-form.component';\nimport { ResourcesViewComponent } from './resource-view/resources-view.component';\nimport { ResourceService } from '../resources.service';\n\nimport {\n  CommonSharedDataStorageService\n} from '../../../shared/shared-services-and-components-module/services/common-shared-data-storage.service';\n\n@Component({\n  selector: 'app-resources',\n  templateUrl: './resources.component.html',\n  styleUrls: ['./resources.component.scss']\n})\nexport class ResourcesComponent implements OnInit {\n\n  @ViewChild('modalwindow') public taskViewModal: ModalDirective;\n  @ViewChild('confirmationdialog') public confirmationdialog;\n  @ViewChild('dynamicResourceContent', { read: ViewContainerRef })\n  dynamicResourceContent: ViewContainerRef;\n\n  public dataList = [];\n  public title: string;\n  private endPoint: string;\n  public pagination: any = false;\n  private resourceFormFactory: any;\n  private comp;\n  public masterData: any;\n\n  public itemsPerPage: any = 20;\n\n  public filterControles = { keyword: '', activity: '', team: '', role: '', technology: '' };\n\n  constructor(\n    private componentFactoryResolver: ComponentFactoryResolver,\n    private http: HttpClient,\n    private resourceService: ResourceService,\n    private commonSharedDataStorageService: CommonSharedDataStorageService\n  ) {\n    this.endPoint = BASE_URL + ApplicationConstant.RESOURCES;\n  }\n\n  ngOnInit() {\n    this.masterData = this.commonSharedDataStorageService.getSharedData();\n    this.getListingData();\n    this.resourceService.getCancelFormEvent().subscribe(\n      res => {\n        this.closeModalWindow();\n      }\n    );\n    this.itemsPerPage = !!this.getCookie('recrperpage') ? this.getCookie('recrperpage') : this.itemsPerPage;\n  }\n\n  private getListingData(page: number = 1) {\n    let endpoint = this.buildUrlWithFilterParams(this.endPoint + '?' + 'page=' + page);\n    this.http.get(endpoint).subscribe(\n      res => {\n        this.dataList = res['data'];\n        this.pagination = res['paginate'];\n      }\n    );\n  }\n\n  public openCUModalWindow(data: any = {}) {\n    this.createFormComp(data);\n    this.taskViewModal.show();\n  }\n\n  public openResourceView(data: any = {}) {\n    this.createResourceViewComponent(data);\n    this.taskViewModal.show();\n  }\n\n\n\n  public closeModalWindow() {\n    this.dynamicResourceContent.detach();\n    this.dynamicResourceContent.clear();\n    this.taskViewModal.hide();\n  }\n\n  private createFormComp(modelInput) {\n    let factory = this.componentFactoryResolver.resolveComponentFactory(ResourceFormComponent);\n    let injector = ReflectiveInjector.fromResolvedProviders([], this.dynamicResourceContent.parentInjector);\n    let comp = factory.create(injector);\n    comp.instance.resource = modelInput;\n    comp.instance.title = !!modelInput.name ? ('Edit resource - ' + modelInput.name) : 'Add resource';\n    comp.instance.resourceDataChanged.subscribe(\n      res => {\n        this.getListingData(this.pagination.currentPage);\n        this.closeModalWindow();\n      }\n    );\n    this.dynamicResourceContent.insert(comp.hostView);\n    return comp;\n  }\n\n  private createResourceViewComponent(modelInput) {\n    let factory = this.componentFactoryResolver.resolveComponentFactory(ResourcesViewComponent);\n    let injector = ReflectiveInjector.fromResolvedProviders([], this.dynamicResourceContent.parentInjector);\n    let comp = factory.create(injector);\n    comp.instance.resource = modelInput;\n    this.dynamicResourceContent.insert(comp.hostView);\n    return comp;\n  }\n\n  public deleteDialog(item) {\n    this.confirmationdialog.presentConfirmationWindow(item);\n  }\n\n  public deleteConfirmed(event) {\n    let endpoint = this.endPoint + '/' + event.id;\n    this.http.delete(endpoint).subscribe(\n      res => {\n        this.getListingData();\n      }, err => {\n        console.log(err);\n      }\n    );\n  }\n\n  public calculateLastPage(total, perPage) {\n    return Math.ceil(total / perPage);\n  }\n\n  /**\n   * Calculate line number based on pagination\n   *\n   * @param currentPage\n   * @param perPage\n   */\n  public calculateLineNumber(currentPage, perPage, index) {\n    return ((currentPage - 1) * perPage) + index + 1;\n  }\n\n  public pageChanged($event) {\n    this.getListingData($event);\n  }\n\n  public onFilterValueChanges() {\n    this.getListingData(1);\n  }\n\n  private buildUrlWithFilterParams(endpointUrl: string): string {\n    for (const key in this.filterControles) {\n      // console.log(key, yourobject[key]);\n      if (this.filterControles[key] !== '') {\n        endpointUrl += '&' + key + '=' + this.filterControles[key];\n      }\n    }\n    return endpointUrl;\n  }\n\n\n  private getCookie(name: string) {\n    let ca: Array<string> = document.cookie.split(';');\n    let caLen: number = ca.length;\n    let cookieName = name + \"=\";\n    let c: string;\n\n    for (let i: number = 0; i < caLen; i += 1) {\n      c = ca[i].replace(/^\\s\\+/g, \"\");\n      if (c.indexOf(cookieName) == 0) {\n        return c.substring(cookieName.length, c.length);\n      }\n    }\n    return \"\";\n  }\n\n  private deleteCookie(name) {\n    this.setCookie(name, \"\", -1);\n  }\n\n  private setCookie(name: string, value: string, expireDays: number, path: string = \"\") {\n    let d: Date = new Date();\n    d.setTime(d.getTime() + expireDays * 24 * 60 * 60 * 1000);\n    let expires: string = \"expires=\" + d.toUTCString();\n    document.cookie = name + \"=\" + value + \"; \" + expires + (path.length > 0 ? \"; path=\" + path : \"\");\n  }\n\n  public changeItemPerPage(val) {\n    this.itemsPerPage = val;\n    this.setCookie('recrperpage', val, 100);\n  }\n\n\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { HttpClient, HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\nimport { ModalModule } from 'ngx-bootstrap';\nimport { AppInterceptor } from '../../shared/http/interceptor/interceptor';\nimport { ResourcesRouting } from './resources.routing';\nimport {\n  SharedServicesAndComponentsModule\n} from '../../shared/shared-services-and-components-module/shared-services-and-components-module';\nimport { ResourcesComponent } from './components/resources.component';\nimport { ResourceFormComponent } from './components/resource-forms/resource-form.component';\nimport { ResourcesViewComponent } from './components/resource-view/resources-view.component';\nimport { ResourceService } from './resources.service';\nimport { BsDatepickerModule } from 'ngx-bootstrap';\nimport {NgSelectModule} from '@ng-select/ng-select';\n\n\n@NgModule({\n  imports: [\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    HttpClientModule,\n    ModalModule.forRoot(),\n    ResourcesRouting,\n    SharedServicesAndComponentsModule,\n    BsDatepickerModule.forRoot(),\n    NgSelectModule\n  ],\n  declarations: [\n    ResourcesComponent,\n    ResourceFormComponent,\n    ResourcesViewComponent\n  ],\n  entryComponents: [ResourceFormComponent, ResourcesViewComponent],\n  providers: [\n    HttpClient,\n    { provide: HTTP_INTERCEPTORS, useClass: AppInterceptor, multi: true },\n    ResourceService\n  ]\n})\nexport class ResourcesModule { }\n","\nimport { ModuleWithProviders } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { ResourcesComponent } from './components/resources.component';\n\nconst routes: Routes = [\n    {\n        path: '', component: ResourcesComponent\n    }\n];\n\nexport const ResourcesRouting: ModuleWithProviders = RouterModule.forChild(routes);\n","import { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs/Observable';\nimport { Subject } from 'rxjs/Subject';\nimport 'rxjs/add/operator/map';\nimport 'rxjs/add/operator/catch';\n\n@Injectable()\nexport class ResourceService {\n\n  private cancel = new Subject<any>();\n  private cancel$ = this.cancel.asObservable();\n\n  private addOrEdit = new Subject<any>();\n  private addOrEdit$ = this.addOrEdit.asObservable();\n  constructor() { }\n\n  public cancelForm() {\n    this.cancel.next('canceled');\n  }\n\n  public getCancelFormEvent() {\n    return this.cancel$;\n  }\n\n  public addOrEdited(data) {\n    this.addOrEdit.next({ data: data });\n  }\n\n  public getAdded() {\n    return this.addOrEdit$;\n  }\n\n}\n"],"sourceRoot":""}